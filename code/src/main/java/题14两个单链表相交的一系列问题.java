import java.util.HashSet;

/**
 * @author yang
 * 2021年04月23日 23:27:00
 */
public class 题14两个单链表相交的一系列问题 {

    //单链表有可能有环,也有可能无环,给定两个单链表的头节点,有可能相交,返回第一个相交的头节点
    public static void main(String[] args) {
        new HashSet<>();
    }
    //判断链表是否有环
    //1.采用hashset
    //2.采用双指针,一个走一步,一个走两步,快指针为null,一定无环,当快慢指针相交,快指针回到起点,快指针一次走一步,两个指针一定会在第一个节点相交

    //如果两个链表都无环,
    //1.把链表1所有的节点都放在map中,链表2查map
    //2.统计链表1的长度length1,和链表1的尾节点
    //  统计链表2的长度length2,和链表2的尾节点
    //如果end1!=end2不可能相交
    //如果end1==end2相交,长的先走length2-length1,短的再走,一定相交

    //如果一个有环一个无环,不可能相交

    //两个有环,

}
