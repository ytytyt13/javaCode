<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <!--开启注解扫描-->
    <context:component-scan base-package="com.qunar.事物"></context:component-scan>
    <!--注册user类-->
    <bean name="user" class="com.qunar.spring入门.pojo.User"></bean>
    <bean name="taxi" class="com.qunar.spring入门.pojo.Taxi"></bean>
    <bean name="taxi1" class="com.qunar.spring入门.pojo.Taxi">
        <property name="taxiNmae" value="aaa"></property>
    </bean>

    <!--把数据库的配置信息写在一个独立的文件中，编译修改数据库的配置内容
      让spring知道jdbc.properties文件的位置
    -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--声明数据源DataSource，作用是连接数据库-->
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--set注入提供连接数据库信息-->
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxActive" value="${jdbc.maxActive}" />

    </bean>

    <!--SqlSessionFactory-->
    <!--声明的是mybatis中提供的SqlSessionFactoryBean类，这个类内部创建SqlSessionFactory-->
    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <!--set注入，把数据库连接池付给dataSource属性-->
        <property name="dataSource" ref="myDataSource"/>
        <!--mybatis主配置文件的位置
            configLocation属性是Resource类型，读取配置文件
            它的赋值使用的是value ， 指定文件的路径，使用的是classpath：表示文件的位置
        -->
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>


    <!--创建 dao对象
        使用SqlSession的getMapper(StudentDao.class)
        MapperScannerConfigurer在内部调用getMapper()生成每个dao接口的代理对象
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定的是SqlSessionFactory对象的id-->
        <property name="sqlSessionFactoryBeanName" value="SqlSessionFactory"/>

        <!--指定包名，包名是dao接口所在的包名
            MapperScannerConfigurer会扫描这个包中的所有接口，把每个接口都执行
            一次getMapper()方法，得到每个接口的dao对象
            创建好的dao对象放入到spring的容器中

            dao默认对象的名称：是接口名字的首字母小写
        -->
        <property name="basePackage" value="com.qunar"/>

        <!--多个包-->
        <!--<property name="basePackage" value="com.md.dao,com.md.dao2"/>-->
    </bean>

<!--     1.配置事务的管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入 DataSource -->
        <property name="dataSource" ref="myDataSource"></property>
    </bean>


    <tx:annotation-driven transaction-manager="transactionManager"/>


<!--        &lt;!&ndash; 2.配置事务的增强，指定对哪个事务管理器进行增强 &ndash;&gt;-->
<!--    <tx:advice id="txadvice" transaction-manager="transactionManager">-->
<!--        <tx:attributes>-->
<!--            &lt;!&ndash;-->
<!--                    表示来配置你要增强的方法的匹配的一个规则，-->
<!--                    注意：只须改方法的命名规则，其他都是固定的！-->
<!--                propagation：事务的传播行为。-->
<!--            &ndash;&gt;-->
<!--            <tx:method name="*" propagation="REQUIRED"></tx:method>-->
<!--            &lt;!&ndash; <tx:method name="insert*" propagation="REQUIRED"></tx:method> &ndash;&gt;-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->

<!--    &lt;!&ndash; 3.配置切入点和切面(最重要的一步) &ndash;&gt;-->
<!--    <aop:config>-->
<!--        &lt;!&ndash; 切入点 &ndash;&gt;-->
<!--        <aop:pointcut expression="execution(* com.qunar.事物.service.*(..))" id="pointcut"/>-->
<!--        &lt;!&ndash; 切面，即表示把哪个增强用在哪个切入点上 &ndash;&gt;-->
<!--        <aop:advisor advice-ref="txadvice" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->




</beans>
